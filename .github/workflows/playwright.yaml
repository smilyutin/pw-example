name: Playwright Tests

on:
  push:
    branches: ["dev*"]          # runs on dev, dev_ex, dev123, etc.
  pull_request:
    branches: ["dev*"]          # PRs whose base branch matches dev*
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: playwright-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-angular:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '16'      # Angular build stays on Node 16
          cache: 'npm'

      - name: Install Angular deps
        shell: bash
        run: |
          set -e
          if npm ci --legacy-peer-deps --no-audit --no-fund; then
            echo "✔ npm ci succeeded"
          else
            echo "⚠ npm ci failed, falling back to npm install"
            npm install --legacy-peer-deps --no-audit --no-fund
          fi

      - run: npx ng version

      - name: Build Angular (production)
        run: npx ng build --configuration production

      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/**

  tests:
    runs-on: ubuntu-latest
    needs: [build-angular]
    env:
      NPM_CONFIG_AUDIT: "false"
      NPM_CONFIG_FUND: "false"
      PW_FORBID_ONLY: "1"

      # ---- App/Test URLs ----------------------------------------------------
      QA_URL: http://localhost:4200
      QA_EXTERNAL_URL: 'https://www.globalsqa.com/demo-site/draganddrop/#Photo%20Manager'

      # ---- Argos config (safe defaults) ------------------------------------
      ARGOS_TOKEN: ${{ secrets.ARGOS_TOKEN || '' }}
      ARGOS_BRANCH: ${{ github.ref_name }}
      ARGOS_BASE_BRANCH: main
      ARGOS_COMMIT: ${{ github.sha }}
      ARGOS_CI: github-actions
      # If you ever shard tests, wire these from a matrix:
      ARGOS_PARALLEL_TOTAL: "1"
      ARGOS_PARALLEL_INDEX: "0"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'       # Playwright requires >= 18
          cache: 'npm'

      - name: Install test deps
        shell: bash
        run: |
          set -e
          if npm ci --legacy-peer-deps --no-audit --no-fund; then
            echo "✔ npm ci succeeded"
          else
            echo "⚠ npm ci failed, falling back to npm install"
            npm install --legacy-peer-deps --no-audit --no-fund
          fi

      - name: Defocus tests (remove .only)
        run: node scripts/strip-only.js

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      # Quick Argos env sanity (doesn't print the token)
      - name: Argos env summary
        run: |
          echo "ARGOS token set?: $([ -n \"$ARGOS_TOKEN\" ] && echo yes || echo no)"
          echo "ARGOS_BRANCH=$ARGOS_BRANCH"
          echo "ARGOS_BASE_BRANCH=$ARGOS_BASE_BRANCH"
          echo "ARGOS_COMMIT=$ARGOS_COMMIT"
          echo "ARGOS_CI=$ARGOS_CI"
          echo "ARGOS_PARALLEL_TOTAL=$ARGOS_PARALLEL_TOTAL ARGOS_PARALLEL_INDEX=$ARGOS_PARALLEL_INDEX"

      # Install Argos ONLY if a token exists; don't touch lockfile; ignore peer conflicts
      - name: Install Argos (lenient)
        id: argos_install
        if: ${{ env.ARGOS_TOKEN != '' }}
        continue-on-error: true
        run: npm install -D --no-save --legacy-peer-deps --no-audit --no-fund @argos-ci/playwright

      # Run with Argos reporter when available…
      - name: Playwright tests (with Argos)
        if: ${{ env.ARGOS_TOKEN != '' && steps.argos_install.outcome == 'success' }}
        run: npx playwright test -c playwright.argos.config.ts --reporter=line

      # …otherwise fall back to default reporter
      - name: Playwright tests (no Argos)
        if: ${{ env.ARGOS_TOKEN == '' || steps.argos_install.outcome != 'success' }}
        run: npx playwright test --reporter=line

      # Upload HTML report when something fails
      - if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report