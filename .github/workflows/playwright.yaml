name: Playwright Tests

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: playwright-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-angular:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Angular 14 prefers Node 16
      - uses: actions/setup-node@v4
        with:
          node-version: '16'
          cache: 'npm'

      - name: Install Angular deps
        shell: bash
        run: |
          set -e
          if npm ci --legacy-peer-deps --no-audit --no-fund; then
            echo "✔ npm ci succeeded"
          else
            echo "⚠ npm ci failed, falling back to npm install"
            npm install --legacy-peer-deps --no-audit --no-fund
          fi

      - run: npx ng version

  tests:
    runs-on: ubuntu-latest
    needs: [build-angular]
    env:
      NPM_CONFIG_AUDIT: "false"
      NPM_CONFIG_FUND: "false"
      PW_FORBID_ONLY: "1"
      ARGOS_TOKEN: ${{ secrets.ARGOS_TOKEN }}   # ← expose secret as env var for this job
    steps:
      - uses: actions/checkout@v4

      # Node 20 for Playwright
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install test deps
        shell: bash
        run: |
          set -e
          if npm ci --legacy-peer-deps --no-audit --no-fund; then
            echo "✔ npm ci succeeded"
          else
            echo "⚠ npm ci failed, falling back to npm install"
            npm install --legacy-peer-deps --no-audit --no-fund
          fi

      - name: Defocus tests (remove .only)
        run: node scripts/strip-only.js

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      # Install Argos only when token is present
      - name: Install Argos (CI only)
        if: ${{ env.ARGOS_TOKEN != '' }}
        run: npm i -D @argos-ci/playwright

      # Run with Argos config when token is present
      - name: Playwright tests (with Argos)
        if: ${{ env.ARGOS_TOKEN != '' }}
        run: npx playwright test -c playwright.argos.config.ts --reporter=line

      # Fallback run when no Argos
      - name: Playwright tests (no Argos)
        if: ${{ env.ARGOS_TOKEN == '' }}
        run: npx playwright test --reporter=line

      - if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report