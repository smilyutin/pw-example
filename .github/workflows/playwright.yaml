name: Playwright Tests

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      CI: true
      BASE_URL: https://www.demoblaze.com
      ARGOS_TOKEN: ${{ secrets.ARGOS_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20
          # remove "cache: npm" to avoid errors when no lockfile is committed

      # Install deps: prefer `ci` if lockfile exists, otherwise `install`
      - name: Install dependencies (npm ci)
        if: ${{ hashFiles('**/package-lock.json') != '' }}
        run: npm ci --no-audit --no-fund

      - name: Install dependencies (npm install)
        if: ${{ hashFiles('**/package-lock.json') == '' }}
        run: npm install --no-audit --no-fund

      # Optional: cache Playwright browsers for speed
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-ms-playwright-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-ms-playwright-

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      # Run a specific script or the whole suite
      # - name: Run Playwright tests (script)
      #   run: npm run auth-sign-login-chrome

      - name: Run Playwright tests (chromium)
        run: npx playwright test --project=chromium

      - name: Upload Playwright report
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Upload test results
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results/
          retention-days: 30